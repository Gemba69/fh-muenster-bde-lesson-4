SOLR_LOCATOR : {
  # Name of solr collection
  collection : bdeu4docs

  # ZooKeeper ensemble -- edit this for your cluster's Zk hostname(s)
  zkHost : "localhost:2181/solr"

  # The maximum number of documents to send to Solr per network batch (throughput knob)
  # batchSize : 1000
}

morphlines : [
  {
    id : loadBooksIntoSolr
    importCommands : ["com.cloudera.**", "org.apache.solr.**"]

    commands : [
      {
        readClob { }
      }
      {
        if {
          conditions: [
          {
              not{
                  grok {
                      expressions : {
                          message: """(?s).*Title:\s+(?<title>([^\n\r]+)).*Author:\s+(?<author>([^\n\r]+)).*EBook #(?<id>(\d+)).*Release Date:\s+(?<release_date>([^\n\r]+)).*[\*]{3}\s+START OF THIS PROJECT.*?[\*]{3}(?<text>(.*))"""
                          message: """(?s).*Title:\s+(?<title>[^\n\r]+).*Author:\s+(?<author>[^\n\r]+).*EBook #(?<id>\d+).*Release Date:\s+(?<reldate>[^\n\r]+).*[\*]{3}\s+START OF THIS PROJECT.*?[\*]{3}\s*(?<text>.*)"""
                      }
                      extract: inplace
                      findSubstrings: false
                      addEmptyStrings: false
                      numRequiredMatches: atLeastOnce
                  }
              }
          }
          ]
          then:[
          { logInfo { format : "found no grok match: {}", args : ["@{}"] } }
          { dropRecord {} }
          ]
        }
      }
      { generateUUID { field : id } }
      { sanitizeUnknownSolrFields { solrLocator : ${SOLR_LOCATOR} } }
      { logDebug { format : "output record {}", args : ["@{}"] } }
      # load the record into a Solr server or MapReduce Reducer.
      { loadSolr { solrLocator : ${SOLR_LOCATOR} } }
    ]
  }
]
